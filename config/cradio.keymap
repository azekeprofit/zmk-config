// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 7 8 9 6 15 16 18 19 17 27 28 29 26 25 33 10 11 12 13 32>;
        };

        rht: rht {
            compatible = "zmk,behavior-hold-tap";
            label = "RHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 14 24 23 13 12 22 21 11 10 20 30 19 18 17 16 31>;
        };

        softhard: softhard {
            compatible = "zmk,behavior-tap-dance";
            label = "SOFTHARD";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            tapping-term-ms = <200>;
        };

        russian_e: russian_e {
            compatible = "zmk,behavior-tap-dance";
            label = "russian_e";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp SQT>;

            tapping-term-ms = <200>;
        };

        russian_x: russian_x {
            compatible = "zmk,behavior-tap-dance";
            label = "russian_x";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp LEFT_BRACKET>;

            tapping-term-ms = <200>;
        };

        russian_yu: russian_yu {
            compatible = "zmk,behavior-tap-dance";
            label = "RUSSIAN_YU";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LS(SLASH)>, <&kp PERIOD>;
        };

        russian_yo: russian_yo {
            compatible = "zmk,behavior-tap-dance";
            label = "RUSSIAN_YO";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp GRAVE>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Ctrl_Z {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
        };

        Ctrl_X {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        Ctrl_C {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        Ctrl_V {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <30 33>;
        };

        ru {
            bindings = <&ruen 1 LC(LS(NUMBER_2))>;
            key-positions = <8 9>;
            layers = <0>;
        };

        en {
            bindings = <&ruen 0 LC(LS(NUMBER_3))>;
            key-positions = <8 9>;
            layers = <1>;
        };

        hancombo {
            bindings = <&han>;
            key-positions = <9 8 7>;
        };

        hanja {
            bindings = <&kp LANG_HANJA>;
            key-positions = <9 8 7 6>;
        };
    };

    macros {
        semicolon: semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_5 &kp KP_NUMBER_9>,
                <&macro_release>,
                <&kp LALT>;

            label = "SEMICOLON";
        };

        ruen: ruen {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &to MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>;
            label = "RUEN";
        };

        han: han {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &kp LC(LS(NUMBER_3)) &kp LANG_HANGEUL>;
            label = "han";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
&kp Q             &kp W        &kp F           &kp P           &kp B          &kp J      &kp L            &kp U         &kp Y         &kp SEMICOLON
&ht LEFT_SHIFT A  &ht LCTRL R  &ht LEFT_WIN S  &ht LEFT_ALT T  &kp G          &kp K      &rht LEFT_ALT N  &rht RMETA E  &rht LCTRL I  &rht LEFT_SHIFT O
&kp Z             &kp X        &kp C           &kp D           &kp V          &kp M      &kp H            &kp COMMA     &kp DOT       &kp ENTER
                                               &kp ESCAPE      &lt 2 SPACE    &lt 3 TAB  &kp BACKSPACE
            >;
        };

        qwerty-cyrillic-hangul {
            bindings = <
&russian_e  &kp W        &kp E       &kp R           &russian_yo    &kp Y   &kp U            &kp I        &kp O                &russian_x
&trans      &ht LCTRL S  &ht LGUI D  &ht LEFT_ALT F  &kp G          &kp H   &rht LEFT_ALT J  &rht RGUI K  &rht LEFT_CONTROL L  &rht LEFT_SHIFT SEMICOLON
&kp Z       &kp X        &kp C       &kp V           &kp B          &kp N   &softhard        &trans       &russian_yu          &trans
                                     &trans          &trans         &trans  &trans
            >;
        };

        numbers_symbols {
            bindings = <
&kp LEFT_PARENTHESIS              &kp NUMBER_1               &kp NUMBER_2           &kp NUMBER_3           &kp GRAVE               &kp SQT    &kp MINUS          &kp PLUS          &kp EQUAL             &semicolon
&ht LEFT_SHIFT RIGHT_PARENTHESIS  &ht LEFT_CONTROL NUMBER_4  &ht LEFT_GUI NUMBER_5  &ht LEFT_ALT NUMBER_6  &kp N0                  &kp SQT    &rht LEFT_ALT N7   &rht LEFT_GUI N8  &rht LEFT_CONTROL N9  &rht LEFT_SHIFT SEMICOLON
&trans                            &kp LESS_THAN              &kp LEFT_BRACE         &kp LEFT_BRACKET       &kp NON_US_BACKSLASH    &kp SLASH  &kp RIGHT_BRACKET  &kp RIGHT_BRACE   &kp GREATER_THAN      &trans
                                                                                    &trans                 &trans                  &trans     &trans
            >;
        };

        navigation {
            bindings = <
&kp ESCAPE  &trans     &trans        &trans        &trans             &kp INS  &kp HOME  &kp UP_ARROW  &kp END    &kp PAGE_UP
&kp LSHIFT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &default_report    &kp DEL  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN
&trans      &trans     &trans        &trans        &bootloader        &trans   &trans    &trans        &trans     &trans
                                     &trans        &trans             &trans   &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG    &trans     &kp C_MUTE         &trans
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp LEFT_ALT    &kp RMETA  &kp RIGHT_CONTROL  &kp RSHIFT
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &studio_unlock  &trans     &trans             &bt BT_CLR_ALL
                          &trans   &trans          &trans        &tog 5
            >;
        };

        mouse {
            bindings = <
&tog MOUSE  &trans  &trans  &trans  &trans    &trans     &trans          &mmv MOVE_UP    &trans           &tog MOUSE
&trans      &trans  &trans  &trans  &trans    &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans
&trans      &trans  &trans  &trans  &trans    &trans     &mkp MB4        &mkp MCLK       &mkp MB5         &trans
                            &trans  &trans    &mkp LCLK  &mkp RCLK
            >;
        };
    };
};
