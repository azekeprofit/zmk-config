// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 7 8 9 6 15 16 18 19 17 27 28 29 26 25 33 10 11 12 13 32>;
        };

        rht: rht {
            compatible = "zmk,behavior-hold-tap";
            label = "RHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 14 24 23 13 12 22 21 11 10 20 30 19 18 17 16 31>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };

        tri_kz {
            if-layers = <6 7>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Ctrl_Z {
            bindings = <&kp LC(Z)>;
            key-positions = <20 21>;
        };

        Ctrl_X {
            bindings = <&kp LC(X)>;
            key-positions = <21 22>;
        };

        Ctrl_C {
            bindings = <&kp LC(C)>;
            key-positions = <22 23>;
        };

        Ctrl_V {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <30 33>;
        };

        ru {
            bindings = <&ruen 1 LC(LS(NUMBER_2))>;
            key-positions = <9 16>;
            layers = <0>;
        };

        kaz {
            bindings = <&ruen 5 LC(LS(NUMBER_4))>;
            key-positions = <17 25>;
        };

        en {
            bindings = <&ruen 0 LC(LS(NUMBER_3))>;
            key-positions = <9 16>;
            layers = <1 5>;
        };

        ru_eh {
            bindings = <&kp SQT>;
            key-positions = <0 1>;
            layers = <1 5>;
        };

        hard_sign {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 25>;
            layers = <1 5>;
        };

        ru_dot {
            bindings = <&kp SLASH>;
            key-positions = <28 29>;
            layers = <1>;
        };

        kz_dot {
            bindings = <&kp N7>;
            key-positions = <28 29>;
            layers = <5>;
        };

        ru_comma {
            bindings = <&kp LS(SLASH)>;
            key-positions = <27 26>;
            layers = <1>;
        };

        kz_comma {
            bindings = <&kp N6>;
            key-positions = <27 26>;
            layers = <5>;
        };

        ru_x {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <8 9>;
            layers = <1 5>;
        };

        kz_soft_o {
            bindings = <&kp MINUS>;
            key-positions = <28 19>;
            layers = <5>;
        };

        kz_hard_u {
            bindings = <&kp N9>;
            key-positions = <7 16>;
            layers = <5>;
        };

        kz_hard_k {
            bindings = <&kp N0>;
            key-positions = <15 16>;
            layers = <5>;
        };

        kz_n {
            bindings = <&kp N4>;
            key-positions = <16 17>;
            layers = <5>;
        };

        ru_colon {
            bindings = <&kp LS(NUMBER_6)>;
            key-positions = <28 17>;
            layers = <1>;
        };

        ru_semicolon {
            bindings = <&kp LS(NUMBER_4)>;
            key-positions = <27 28>;
            layers = <1>;
        };

        ru_question {
            bindings = <&kp LS(NUMBER_7)>;
            key-positions = <25 16>;
            layers = <1>;
        };

        ru_yo {
            bindings = <&kp GRAVE>;
            key-positions = <3 4>;
            layers = <1>;
        };

        kz_soft_a {
            bindings = <&kp N2>;
            key-positions = <10 11>;
            layers = <5>;
        };

        kz_soft_i {
            bindings = <&kp N3>;
            key-positions = <18 19>;
            layers = <5>;
        };

        kz_soft_g {
            bindings = <&kp N5>;
            key-positions = <13 14>;
            layers = <5>;
        };

        kz_soft_u {
            bindings = <&kp N8>;
            key-positions = <7 18>;
            layers = <5>;
        };

        kz_hard_h {
            bindings = <&kp EQUAL>;
            key-positions = <15 26>;
            layers = <5>;
        };
    };

    macros {
        ruen: ruen {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &to MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>;
            label = "RUEN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
&kp Q             &kp W        &kp F           &kp P           &kp B          &kp J      &kp L            &kp U         &kp Y         &kp SEMICOLON
&ht LEFT_SHIFT A  &ht LCTRL R  &ht LEFT_WIN S  &ht LEFT_ALT T  &kp G          &kp K      &rht LEFT_ALT N  &rht RMETA E  &rht LCTRL I  &rht LEFT_SHIFT O
&kp Z             &kp X        &kp C           &kp D           &kp V          &kp M      &kp H            &kp COMMA     &kp DOT       &kp ENTER
                                  &ht LEFT_SHIFT ESCAPE  &lt 2 SPACE          &lt 3 TAB  &kp BACKSPACE
            >;
        };

        qwerty-hangul {
            bindings = <
&trans      &kp W        &kp E       &kp R           &kp T          &kp Y   &kp U            &kp I        &kp O                &kp P
&trans      &ht LCTRL S  &ht LGUI D  &ht LEFT_ALT F  &kp G          &kp H   &rht LEFT_ALT J  &rht RGUI K  &rht LEFT_CONTROL L  &rht LEFT_SHIFT SEMICOLON
&kp Z       &kp X        &kp C       &kp V           &kp B          &kp N   &kp M            &trans       &trans               &trans
                                     &trans          &trans        &trans  &trans
            >;
        };

        numbers_symbols {
            bindings = <
&kp LEFT_PARENTHESIS              &kp NUMBER_1               &kp NUMBER_2           &kp NUMBER_3           &kp GRAVE               &kp SQT    &kp MINUS          &kp PLUS          &kp EQUAL             &kp AMPERSAND
&ht LEFT_SHIFT RIGHT_PARENTHESIS  &ht LEFT_CONTROL NUMBER_4  &ht LEFT_GUI NUMBER_5  &ht LEFT_ALT NUMBER_6  &kp N0                  &kp STAR   &rht LEFT_ALT N7   &rht LEFT_GUI N8  &rht LEFT_CONTROL N9  &rht LEFT_SHIFT SEMICOLON
&trans                            &kp LESS_THAN              &kp LEFT_BRACE         &kp LEFT_BRACKET       &kp NON_US_BACKSLASH    &kp SLASH  &kp RIGHT_BRACKET  &kp RIGHT_BRACE   &kp GREATER_THAN      &trans
                                                                                    &trans                 &trans                  &trans     &trans
            >;
        };

        navigation {
            bindings = <
&kp ESCAPE  &trans     &trans        &trans        &trans             &kp INS  &kp HOME  &kp UP_ARROW  &kp END    &kp PAGE_UP
&kp LSHIFT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &default_report    &kp DEL  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN
&trans      &trans     &trans        &trans        &bootloader        &trans   &trans    &trans        &trans     &trans
                                     &trans        &trans             &trans   &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG    &trans     &kp C_MUTE         &trans
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp LEFT_ALT    &kp RMETA  &kp RIGHT_CONTROL  &kp RSHIFT
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &studio_unlock  &trans     &trans             &bt BT_CLR_ALL
                          &trans   &trans          &trans        &tog 5
            >;
        };

        kazakh {
            bindings = <
&trans      &kp W        &kp E       &kp R           &kp T          &kp Y   &kp U            &kp I        &kp O                &kp P
&trans      &ht LCTRL S  &ht LGUI D  &ht LEFT_ALT F  &kp G          &kp H   &rht LEFT_ALT J  &rht RGUI K  &rht LEFT_CONTROL L  &rht LEFT_SHIFT SEMICOLON
&kp Z       &kp X        &kp C       &kp V           &kp B          &kp N   &kp M            &trans       &trans               &trans
                                     &trans          &lt 6 SPACE    &lt 7 TAB  &kp BACKSPACE
            >;
        };

        numbers_symbols_kz {
            bindings = <
&kp GRAVE              &kp KP_N1               &kp KP_N2           &kp KP_N3              &kp GRAVE        &kp N1    &kp KP_SUBTRACT     &kp KP_PLUS         &kp LS(NUMBER_6)      &kp AMPERSAND
&ht LEFT_SHIFT LS(GRAVE)          &ht LEFT_CONTROL KP_N4     &ht LEFT_GUI KP_N5     &ht LEFT_ALT KP_N6     &kp KP_N0        &kp KP_MULTIPLY   &rht LEFT_ALT KP_N7   &rht LEFT_GUI KP_N8  &rht LEFT_CONTROL KP_N9  &rht LEFT_SHIFT SEMICOLON
&trans                            &kp LESS_THAN              &kp LEFT_BRACE         &kp LEFT_BRACKET       &kp NON_US_BACKSLASH    &kp SLASH  &kp RIGHT_BRACKET  &kp RIGHT_BRACE   &kp GREATER_THAN      &trans
                                                                                    &trans                 &trans                  &trans     &trans
            >;
        };

        navigation_kz {
            bindings = <
&kp ESCAPE  &trans     &trans        &trans        &trans             &kp INS  &kp HOME  &kp UP_ARROW  &kp END    &kp PAGE_UP
&kp LSHIFT  &kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &default_report    &kp DEL  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN
&trans      &trans     &trans        &trans        &bootloader        &trans   &trans    &trans        &trans     &trans
                                     &trans        &trans             &trans   &trans
            >;
        };
    };
};
